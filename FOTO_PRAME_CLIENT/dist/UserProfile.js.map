{"version":3,"file":"UserProfile.js","sources":["../node_modules/@mui/icons-material/PowerSettingsNew.js","../src/components/UserProfile.jsx"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13 3h-2v10h2V3zm4.83 2.17-1.42 1.42C17.99 7.86 19 9.81 19 12c0 3.87-3.13 7-7 7s-7-3.13-7-7c0-2.19 1.01-4.14 2.58-5.42L6.17 5.17C4.23 6.82 3 9.26 3 12c0 4.97 4.03 9 9 9s9-4.03 9-9c0-2.74-1.23-5.18-3.17-6.83z\"\n}), 'PowerSettingsNew');\nexports.default = _default;","import { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, useNavigate, Link } from \"react-router-dom\";\r\nimport { googleLogout } from \"@react-oauth/google\";\r\nimport PowerSettingsNewIcon from \"@mui/icons-material/PowerSettingsNew\";\r\nimport WestIcon from \"@mui/icons-material/West\";\r\nimport ThemeContext from \"../context/ThemeContext\";\r\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\r\n\r\nimport {\r\n  userCreatedPinsQuery,\r\n  userQuery,\r\n  userSavedPinsQuery,\r\n} from \"../utils/data\";\r\nimport { client } from \"../client\";\r\nimport MasonryLayout from \"./MasonryLayout\";\r\nimport Spinner from \"./Spinner\";\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  IconButton,\r\n  Button,\r\n  Tooltip,\r\n  SvgIcon,\r\n} from \"@mui/material\";\r\nconst randomImage = \"https://source.unsplash.com/1600x900/?photography\";\r\nconst UserProfile = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [pins, setPins] = useState(null);\r\n  const [text, setText] = useState(\"Created\");\r\n  const [activeBtn, setActiveBtn] = useState(\"created\");\r\n  const navigate = useNavigate();\r\n  const { userId } = useParams();\r\n  const { currentTheme } = useContext(ThemeContext);\r\n  useEffect(() => {\r\n    const query = userQuery(userId);\r\n    client.fetch(query).then((data) => {\r\n      setUser(data[0]);\r\n    });\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    if (text === \"Created\") {\r\n      const createdPinsQuery = userCreatedPinsQuery(userId);\r\n      client.fetch(createdPinsQuery).then((data) => setPins(data));\r\n    } else {\r\n      const savedPinsQuery = userSavedPinsQuery(userId);\r\n      client.fetch(savedPinsQuery).then((data) => setPins(data));\r\n    }\r\n  }, [text, userId]);\r\n\r\n  const handleLogout = () => {\r\n    googleLogout();\r\n    localStorage.clear();\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  if (!user) {\r\n    return <Spinner message=\"Loading profile...\" />;\r\n  }\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <Box sx={{ position: \"relative\" }}>\r\n          <LazyLoadImage\r\n            style={{\r\n              height: 500,\r\n              width: \"100%\",\r\n              objectFit: \"cover\",\r\n            }}\r\n            src={randomImage}\r\n            alt=\"banner-image\"\r\n          />\r\n          <Box display={\"flex\"} justifyContent={\"center\"} alignItems={\"center\"}>\r\n            <LazyLoadImage\r\n              alt=\"user-image\"\r\n              src={user.image}\r\n              effect=\"blur\"\r\n              style={{\r\n                position: \"absolute\",\r\n                bottom: -30,\r\n                height: 80,\r\n                width: 80,\r\n                borderRadius: \"50%\",\r\n              }}\r\n            />\r\n          </Box>\r\n          <Tooltip title=\"Logout\">\r\n            <IconButton\r\n              aria-label=\"send\"\r\n              size=\"large\"\r\n              onClick={handleLogout}\r\n              sx={{\r\n                position: \"absolute\",\r\n                top: 2,\r\n                right: 2,\r\n                backgroundColor:\r\n                  currentTheme.name === \"light\" ? \"white\" : \"black\",\r\n                \"@media (max-width: 600px)\": {\r\n                  top: \"auto\",\r\n                  bottom: 2,\r\n                },\r\n              }}\r\n            >\r\n              <PowerSettingsNewIcon color=\"error\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Link to=\"/\">\r\n            <Tooltip title=\"Back\">\r\n              <IconButton\r\n                aria-label=\"back\"\r\n                sx={{\r\n                  position: \"absolute\",\r\n                  top: 2,\r\n                  left: 2,\r\n                  backgroundColor:\r\n                    currentTheme.name === \"light\" ? \"white\" : \"black\",\r\n                  \"@media (max-width: 600px)\": {\r\n                    top: \"auto\",\r\n                    bottom: 2,\r\n                  },\r\n                }}\r\n              >\r\n                <SvgIcon\r\n                  style={{\r\n                    stroke: currentTheme.palette.color.default,\r\n                    strokeWidth: 2,\r\n                  }}\r\n                >\r\n                  <WestIcon />\r\n                </SvgIcon>\r\n              </IconButton>\r\n            </Tooltip>\r\n          </Link>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <Box\r\n          display={\"flex\"}\r\n          justifyContent={\"center\"}\r\n          alignItems={\"center\"}\r\n          marginTop={5}\r\n        >\r\n          <Typography\r\n            variant=\"h1\"\r\n            display={\"block\"}\r\n            gutterBottom\r\n            sx={{\r\n              fontSize: \"28px\",\r\n              wordWrap: \"break-word\", // Add this line\r\n              overflowWrap: \"break-word\",\r\n              textTransform: \"capitalize\",\r\n            }}\r\n          >\r\n            {user.userName}\r\n          </Typography>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        <Box\r\n          display={\"flex\"}\r\n          justifyContent={\"center\"}\r\n          alignItems={\"center\"}\r\n          gap={1}\r\n        >\r\n          <Button\r\n            variant={activeBtn === \"created\" ? \"contained\" : \"\"}\r\n            color=\"error\"\r\n            style={{\r\n              borderRadius: \"14px\",\r\n            }}\r\n            onClick={(e) => {\r\n              setText(e.target.textContent);\r\n              setActiveBtn(\"created\");\r\n            }}\r\n          >\r\n            Created\r\n          </Button>\r\n          <Button\r\n            variant={activeBtn === \"saved\" ? \"contained\" : \"\"}\r\n            color=\"error\"\r\n            style={{\r\n              borderRadius: \"14px\",\r\n            }}\r\n            onClick={(e) => {\r\n              setText(e.target.textContent);\r\n              setActiveBtn(\"saved\");\r\n            }}\r\n          >\r\n            Saved\r\n          </Button>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={12} sm={12} md={12} lg={12} xl={12}>\r\n        {pins?.length ? (\r\n          <MasonryLayout pins={pins} />\r\n        ) : (\r\n          <Typography\r\n            variant=\"caption\"\r\n            fontWeight=\"semiBold\"\r\n            textTransform={\"capitalize\"}\r\n            fontSize={18}\r\n          >\r\n            No Pins Found!\r\n          </Typography>\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"names":["_interopRequireDefault","require$$0","PowerSettingsNew","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","_default","randomImage","UserProfile","user","setUser","useState","pins","setPins","text","setText","activeBtn","setActiveBtn","navigate","useNavigate","userId","useParams","currentTheme","useContext","ThemeContext","useEffect","query","userQuery","client","data","createdPinsQuery","userCreatedPinsQuery","savedPinsQuery","userSavedPinsQuery","handleLogout","googleLogout","jsxs","Grid","jsx","Box","LazyLoadImage","Tooltip","IconButton","PowerSettingsNewIcon","Link","SvgIcon","WestIcon","Typography","Button","e","MasonryLayout","Spinner"],"mappings":"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","x_google_ignoreList":[0]}